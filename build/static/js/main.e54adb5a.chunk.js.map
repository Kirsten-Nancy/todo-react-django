{"version":3,"sources":["components/AddTodo.js","components/CustomCalendar.js","components/EditTodoForm.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","addTodo","useState","title","setTitle","className","type","placeholder","name","value","onChange","e","target","onClick","alert","CustomCalendar","chooseDate","Date","selectedDate","setSelectedDate","date","year","getFullYear","month","getMonth","day","getDate","EditTodoForm","setEditTodoTitle","editTodo","todo","editedTodoText","setEditedToDoText","style","textAlign","event","modifiedTodo","Todo","toggleTodo","deleteTodo","editTodoTitle","textDecoration","completed","checked","color","fontSize","cursor","marginRight","marginLeft","id","display","created","split","updated","Todos","todosList","map","App","baseUrl","today","setTodoList","a","newTodo","fetch","method","headers","Accept","body","JSON","stringify","then","fetchTodos","useEffect","response","json","data","console","log","length","completedTodo","editedTodo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e54adb5a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const addNew = () => {\r\n    if (title !== \"\") {\r\n      addTodo(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      alert(\"Please enter todo title\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"todoInput\"\r\n        type=\"text\"\r\n        placeholder=\"Todo title\"\r\n        name=\"Add Todo\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      {/* <input type='date' /> */}\r\n      <button className=\"btn addButton\" onClick={addNew}>\r\n        Add\r\n      </button>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import { useState } from \"react\"\r\nimport Calendar from \"react-calendar\"\r\nimport \"react-calendar/dist/Calendar.css\"\r\n\r\nconst CustomCalendar = ({ chooseDate }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n  const handleDateChange = (date) => {\r\n    let year = date.getFullYear()\r\n    let month = date.getMonth() + 1\r\n    let day = date.getDate()\r\n\r\n    setSelectedDate(date)\r\n    chooseDate({ year: year, month: month, day: day })\r\n  }\r\n  return <Calendar onChange={handleDateChange} value={selectedDate} />\r\n}\r\n\r\nexport default CustomCalendar\r\n","import { useState } from \"react\"\r\n\r\nconst EditTodoForm = ({ setEditTodoTitle, editTodo, todo }) => {\r\n  const [editedTodoText, setEditedToDoText] = useState(todo.title)\r\n\r\n  const saveTodo = () => {\r\n    let modifiedTodo = { ...todo, title: editedTodoText }\r\n    editTodo(modifiedTodo)\r\n    setEditTodoTitle(false)\r\n  }\r\n  return (\r\n    <div>\r\n      <label style={{ textAlign: \"center\" }}>Edit Todo</label>\r\n      <br />\r\n      <input\r\n        className=\"todoInput\"\r\n        type=\"text\"\r\n        name=\"Todo text\"\r\n        value={editedTodoText}\r\n        onChange={(event) => setEditedToDoText(event.target.value)}\r\n      />\r\n      <div>\r\n        <button className=\"btn save-btn\" onClick={saveTodo}>\r\n          Save\r\n        </button>\r\n        <button\r\n          onClick={() => setEditTodoTitle(false)}\r\n          className=\"btn cancel-btn\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\nexport default EditTodoForm\r\n","import { useState } from \"react\"\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\"\r\nimport EditTodoForm from \"./EditTodoForm\"\r\n\r\nconst Todo = ({ todo, toggleTodo, deleteTodo, editTodo }) => {\r\n  // Toggles the edit todo form, to close or open the form\r\n  const [editTodoTitle, setEditTodoTitle] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {editTodoTitle ? (\r\n        <EditTodoForm\r\n          todo={todo}\r\n          setEditTodoTitle={setEditTodoTitle}\r\n          editTodo={editTodo}\r\n        />\r\n      ) : (\r\n        <div className=\"todo-container\">\r\n          <div className=\"todo\">\r\n            <label\r\n              style={{\r\n                textDecoration: todo.completed ? \"line-through\" : \"none\",\r\n              }}\r\n              className=\"todoLabel\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                value={todo.completed}\r\n                checked={todo.completed}\r\n                onChange={() => toggleTodo(todo)}\r\n              />\r\n              {todo.title}\r\n            </label>\r\n\r\n            {todo.completed ? (\r\n              \"\"\r\n            ) : (\r\n              <FaEdit\r\n                style={{\r\n                  color: \"green\",\r\n                  fontSize: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                  marginRight: \"10px\",\r\n                  marginLeft: \"10px\",\r\n                }}\r\n                onClick={() => setEditTodoTitle(true)}\r\n              />\r\n            )}\r\n            <FaTrash\r\n              style={{\r\n                color: \"#f44336\",\r\n                fontSize: \"1rem\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => deleteTodo(todo.id)}\r\n            />\r\n          </div>\r\n          <div className=\"dates\">\r\n            <p style={{ display: \"inline-block\", marginRight: \"10px\" }}>\r\n              Created: {todo.created.split(\"T\")[0]}\r\n            </p>\r\n            {todo.completed ? (\r\n              <p style={{ display: \"inline-block\" }}>\r\n                Completed:{todo.updated.split(\"T\")[0]}\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import Todo from \"./Todo\"\r\n\r\nconst Todos = ({ todosList, toggleTodo, deleteTodo, editTodo }) => {\r\n  return (\r\n    <>\r\n      {todosList.map((todo) => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          toggleTodo={toggleTodo}\r\n          deleteTodo={deleteTodo}\r\n          editTodo={editTodo}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Todos\r\n","import { useState, useEffect } from \"react\"\nimport AddTodo from \"./components/AddTodo\"\nimport CustomCalendar from \"./components/CustomCalendar\"\nimport Todos from \"./components/Todos\"\n\nfunction App() {\n  const baseUrl = \"http://127.0.0.1:8000/api/todos\"\n  let today = new Date()\n  const [todosList, setTodoList] = useState([])\n  const [date, chooseDate] = useState({\n    year: today.getFullYear(),\n    month: today.getMonth() + 1,\n    day: today.getDate(),\n  })\n\n  const toggleTodo = (todo) => {\n    // Takes the elements of the array and performs operations on them, i.e check/uncheck, one that meets the condition\n    // setTodoList(\n    //   todosList.map((todo) =>\n    //     todo.id === id\n    //       ? { ...todo, completed: true, dateCompleted: completedDate }\n    //       : todo\n    //   )\n    // )\n\n    let completedTodo = { ...todo, completed: true }\n    fetch(`${baseUrl}/update/${todo.id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(completedTodo),\n    }).then(() => {\n      fetchTodos()\n    })\n  }\n\n  const addTodo = async (title) => {\n    const newTodo = {\n      completed: false,\n      title: title,\n    }\n    fetch(`${baseUrl}/add`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTodo),\n    }).then(() => {\n      fetchTodos()\n    })\n  }\n\n  const deleteTodo = (id) => {\n    // setTodoList(todosList.filter((todo) => todo.id !== id))\n    fetch(`${baseUrl}/delete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(() => {\n      fetchTodos()\n    })\n  }\n\n  const editTodo = (todo) => {\n    let editedTodo = { ...todo, title: todo.title }\n    fetch(`${baseUrl}/update/${todo.id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(editedTodo),\n    }).then(() => {\n      fetchTodos()\n    })\n  }\n\n  useEffect(() => {\n    fetchTodos()\n  }, [date])\n\n  const fetchTodos = async () => {\n    let response = await fetch(\n      `${baseUrl}/${date.year}/${date.month}/${date.day}`\n    )\n    let data = await response.json()\n    console.log(data)\n    setTodoList(data)\n  }\n\n  return (\n    <div className=\"App\">\n      <header>To-do application</header>\n      <div className=\"main\">\n        <div className=\"custom-calendar\">\n          <CustomCalendar chooseDate={chooseDate} />\n        </div>\n\n        <div className=\"container\">\n          <h6>{`${date.year}-${date.month}-${date.day}`} todos</h6>\n\n          {todosList.length === 0 ? (\n            <p className=\"empty\">No todos created</p>\n          ) : (\n            <div>\n              {date.day === today.getDate() ? (\n                <AddTodo addTodo={addTodo} />\n              ) : (\n                \"\"\n              )}\n              <Todos\n                todosList={todosList}\n                toggleTodo={toggleTodo}\n                deleteTodo={deleteTodo}\n                editTodo={editTodo}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}